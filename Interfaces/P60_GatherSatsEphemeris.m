function Res = P60_GatherSatsEphemeris(inRes, Params) %#ok<INUSD>
%
% Функция сбора навигационной информации для спутников, у которых было
% найдено хотя бы одно значение TOW_Count_Message
%
% Входные переменные
%   inRes - структура с результатами модели, объявленная в Main;
%
% Выходные переменные
%   Res - структура, которая отличается от inRes добавлением нового поля,
%       описание которого дано ниже в коде.

% Пересохранение результатов
    Res = inRes;

%% ИНИЦИАЛИЗАЦИЯ РЕЗУЛЬТАТА
    % Ephemeris = cell(N, Res.Search.NumSats);
    
    % Количество строк cell-массива Ephemeris совпадает с количеством
    % подкадров спутников с одинаковым значением TOW (естественно, 
    % учитываются только те спутники, у которых SatsData.isSat2Use = 1).
    % Элементами Ephemeris являются структуры, содержащие значения всех
    % параметров первого, второго и третьего подкадров, а также порядковый
    % номер подкадра, номер первого CA подкадра, передаваемое значение TOW,
    % для которого верна эта информация. Если полную информацию собрать не
    % удалось, то элемент cell-массива должен быть пустым.

%% УСТАНОВКА ПАРАМЕТРОВ

%% РАСЧЁТ ПАРАМЕТРОВ
    % Имена всех полей структур, являющихся элементами Ephemeris
    ENames = { ...
    ... % Эти поля не относятся к навигационной информации
            'SFNum', ... % Порядковый номер подкадра спутника,
                ... % соответствующего текущей строке (подкадру) Ephemeris
            'CANum', ... % Номер CA-кода спутника, с которого начинается
                ... % подкадр с порядковым номером SFNum
            'TOW', ... % Значение TOW, передаваемое в подкадре с порядковым
                ... % номером SFNum. Это значение одинаковое для всех
                ... % элементов одной строки Ephemeris
            ...
    ... % Поля с навигационной информацией
            'WeekNumber', ...
            'CodesOnL2', ...
            'URA', ...
            'URA_in_meters', ...
            'SV_Health_Summary', ...
            'SV_Health', ...
            'IODC', ...
            'L2_P_Data_Flag', ...
            'T_GD', ...
            't_oc', ...
            'a_f2', ...
            'a_f1', ...
            'a_f0', ...
            'IODE', ...
            'C_rs', ...
            'Delta_n', ...
            'M_0', ...
            'C_uc', ...
            'e', ...
            'C_us', ...
            'sqrtA', ...
            't_oe', ...
            'Fit_Interval_Flag', ...
            'AODO', ...
            'C_ic', ...
            'Omega_0', ...
            'C_is', ...
            'i_0', ...
            'C_rc', ...
            'omega', ...
            'DOmega', ...
            'IODE', ...
            'IDOT', ...
    };

%% ОСНОВНАЯ ЧАСТЬ ФУНКЦИИ - ЦИКЛ ПО НАЙДЕННЫМ СПУТНИКАМ
    % Строка состояния
        
    % Определим порядковые номера спутников, для котрых мы будем пытаться
    % собирать эфемериды
        
    % Определим значения TOW, общие для всех спутников

    % Для каждого спутника определим порядковый номер подкадра, в котором
    % встречается первое значение TOW общее с остальными спутниками

    % Заготовим результат
            
    % Теперь попробуем для каждого подкадра каждого спутника определить
    % эфемериды

    % Добавим новое поле с результатами в Res

    % Строка состояния

end

function E = MakeEmptyE(ENames)
    % Создадим все поля

    % Установим в поля, не относящиеся к навигационным данным, произвольные
    % параметры, чтобы тест isGathered проходил успешно (см. CheckAndAddE)
        E.SFNum = -1;
        E.CANum = -1;
        E.TOW   = -1;
end

function [outE, isNew] = CheckAndAddE(inE, SFNum, SFData, ENames)

% В зависимости от номера подкадра мы сравниваем значение либо IODC, либо
% IODE, имеющееся в InE с тем же значением в SFData, потом сравниваем
% значения IODC и IODE в inE

% Если нужно создавать новую E, то сделаем это, в противном случае
% скопируем E со входа
        
% Обновим пустые поля outE значениями из SFData
end

function isGathered = CheckE(E, ENames)
% Проверим, остались ли пустые поля
end